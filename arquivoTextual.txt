package br.edu.ifsc.moeda;

import java.util.ArrayList;
import java.util.List;

import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RestController;

@RestController
public class CotacaoMoedaController {

	@RequestMapping(value = "/converter_moeda/{valor}/{tipoMoeda}/{tipoOperacao}", method = RequestMethod.GET)
	public Double converterMoeda(
			@PathVariable(name = "valor") double valor, 
			@PathVariable(name = "tipoMoeda") String tipoMoeda, 
			@PathVariable(name = "tipoOperacao") String tipoOperacao) {
		
		Moeda moeda = MoedaDataSource.get(tipoMoeda);
		
		double cotacao = 0.0;
		
		if (moeda != null) {
			if (tipoOperacao.equalsIgnoreCase("venda")) {
				if (!tipoMoeda.equalsIgnoreCase("OU")) {
					cotacao = valor / moeda.getValorVenda();
				} else {
					cotacao = valor / calcularPrecoVendaOuro(moeda);
				}
			} else {
				cotacao = valor * moeda.getValorCompra();
			}
		}
		
		return cotacao;
	}
	
	@RequestMapping(value = "/converter_moeda/{valor}/{tipoOperacao}")
	public CotacaoTiposMoedaDTO getCotacaoMoedas(
			@PathVariable(name = "valor") double valor, 
			@PathVariable(name = "tipoOperacao") String tipoOperacao) {
		
		CotacaoTiposMoedaDTO moedaDTO = new CotacaoTiposMoedaDTO();
		moedaDTO.setValor(valor);
		moedaDTO.setOperacao(tipoOperacao);
		
		for (Moeda moeda: MoedaDataSource.getAll()) {
			switch (moeda.getSigla()) {
				case "DC":
					if (tipoOperacao.equalsIgnoreCase("venda"))
						moedaDTO.setDc(valor / moeda.getValorVenda());
					else 
						moedaDTO.setDc(valor * moeda.getValorCompra());
					break;
				case "DP":
					if (tipoOperacao.equalsIgnoreCase("venda"))
						moedaDTO.setDp(valor / moeda.getValorVenda());
					else 
						moedaDTO.setDp(valor * moeda.getValorCompra());
					break;
				case "DX":
					if (tipoOperacao.equalsIgnoreCase("venda"))
						moedaDTO.setDx(valor / moeda.getValorVenda());
					else 
						moedaDTO.setDx(valor * moeda.getValorCompra());
					break;
				case "DT":
					if (tipoOperacao.equalsIgnoreCase("venda"))
						moedaDTO.setDt(valor / moeda.getValorVenda());
					else 
						moedaDTO.setDt(valor * moeda.getValorCompra());
					break;
				case "EU":
					if (tipoOperacao.equalsIgnoreCase("venda"))
						moedaDTO.setEu(valor / moeda.getValorVenda());
					else 
						moedaDTO.setEu(valor * moeda.getValorCompra());
					break;
				case "OU":	
					if (tipoOperacao.equalsIgnoreCase("venda"))
						moedaDTO.setOu(valor / calcularPrecoVendaOuro(moeda));
					else 
						moedaDTO.setOu(valor * moeda.getValorCompra());
					break;
			}
		}
		
		return moedaDTO;
	}
	
	@RequestMapping(value = "/cotacao_moeda", method = RequestMethod.GET)
	public List<CotacaoMoedaDTO> getCotacaoMoedas() {
		
		List<CotacaoMoedaDTO> resultado = new ArrayList<>();
		
		for (Moeda moeda: MoedaDataSource.getAll()) {
			CotacaoMoedaDTO moedaDTO = 
				new CotacaoMoedaDTO(moeda.getSigla(), moeda.getValorCompra(), moeda.getValorVenda());
			resultado.add(moedaDTO);
		}
		
		return resultado;
	}
	
	@RequestMapping(value = "/get_moeda/{tipoMoeda}")
	public Moeda getMoeda(
			@PathVariable(name = "tipoMoeda") String tipoMoeda) {
		Moeda moeda = MoedaDataSource.get(tipoMoeda);
		return moeda;
	}
	
	private double calcularPrecoVendaOuro(Moeda moeda) {
		double precoVendaOuro = moeda.getValorCompra() + 
				(moeda.getValorCompra() * moeda.getValorVenda() / 100);
		return precoVendaOuro;
	}
	
	
	
}
----------------------------------------------------------------------------

package br.edu.ifsc.moeda;

public class CotacaoMoedaDTO {
	private String moeda;
	private double compra;
	private double venda;
	public CotacaoMoedaDTO(String moeda, double compra, double venda) {
		super();
		this.moeda = moeda;
		this.compra = compra;
		this.venda = venda;
	}
	public String getMoeda() {
		return moeda;
	}
	public double getCompra() {
		return compra;
	}
	public double getVenda() {
		return venda;
	}
	
}
-----------------------------------------------------------------------------------

package br.edu.ifsc.moeda;

public class CotacaoTiposMoedaDTO {
	private double valor;
	private String operacao;
	private double dc;
	private double dp;
	private double dx;
	private double dt;
	private double eu;
	private double ou;
	public CotacaoTiposMoedaDTO(double valor, String operacao, double dc, double dp, double dx, double dt, double eu,
			double ou) {
		super();
		this.valor = valor;
		this.operacao = operacao;
		this.dc = dc;
		this.dp = dp;
		this.dx = dx;
		this.dt = dt;
		this.eu = eu;
		this.ou = ou;
	}
	public CotacaoTiposMoedaDTO() {
		super();
	}
	public double getValor() {
		return valor;
	}
	public void setValor(double valor) {
		this.valor = valor;
	}
	public String getOperacao() {
		return operacao;
	}
	public void setOperacao(String operacao) {
		this.operacao = operacao;
	}
	public double getDc() {
		return dc;
	}
	public void setDc(double dc) {
		this.dc = dc;
	}
	public double getDp() {
		return dp;
	}
	public void setDp(double dp) {
		this.dp = dp;
	}
	
	public double getDx() {
		return dx;
	}
	
	public void setDx(double dx) {
		this.dx = dx;
	}
	
	public double getDt() {
		return dt;
	}
	public void setDt(double dt) {
		this.dt = dt;
	}
	public double getEu() {
		return eu;
	}
	public void setEu(double eu) {
		this.eu = eu;
	}
	public double getOu() {
		return ou;
	}
	public void setOu(double ou) {
		this.ou = ou;
	}

}

----------------------------------------------------------------------------

package br.edu.ifsc.moeda;

import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;

@SpringBootApplication
public class Exercicio2Atividade2ConversorMoedaApiApplication {

	public static void main(String[] args) {
		MoedaDataSource.criarLista();
		SpringApplication.run(Exercicio2Atividade2ConversorMoedaApiApplication.class, args);
	}

}


-------------------------------------------------------------------------------------------------


package br.edu.ifsc.moeda;

public class Moeda {
	private String nome;
	private String sigla;
	private Double valorCompra;
	private Double valorVenda;
	public Moeda(String nome, String sigla, Double valorCompra, Double valorVenda) {
		super();
		this.nome = nome;
		this.sigla = sigla;
		this.valorCompra = valorCompra;
		this.valorVenda = valorVenda;
	}
	public Moeda() {
		super();
	}
	public String getNome() {
		return nome;
	}
	public void setNome(String nome) {
		this.nome = nome;
	}
	public String getSigla() {
		return sigla;
	}
	public void setSigla(String sigla) {
		this.sigla = sigla;
	}
	public Double getValorCompra() {
		return valorCompra;
	}
	public void setValorCompra(Double valorCompra) {
		this.valorCompra = valorCompra;
	}
	public Double getValorVenda() {
		return valorVenda;
	}
	public void setValorVenda(Double valorVenda) {
		this.valorVenda = valorVenda;
	}
	
	
}

----------------------------------------------------------------------------------------------------------


package br.edu.ifsc.moeda;

import java.util.ArrayList;
import java.util.List;

public class MoedaDataSource {
	private static List<Moeda> listaMoedas = new ArrayList<>();
	
	public static void criarLista() {
		listaMoedas.add(new Moeda("D贸lar Comercial", "DC", 5.6061, 5.6066));
		listaMoedas.add(new Moeda("D贸lar paralelo", "DP", 5.69, 5.79));
		listaMoedas.add(new Moeda("D贸lar PTAX", "DX", 5.6058, 5.6064));
		listaMoedas.add(new Moeda("D贸lar Turismo", "DT", 5.5430, 5.7530));
		listaMoedas.add(new Moeda("EURO", "EU", 6.5630, 6.8070));
		listaMoedas.add(new Moeda("OURO", "OU", 346.70, 1.88));		
	}
	
	public static Moeda get(String sigla) {
		for (Moeda moeda: listaMoedas) {
			if (moeda.getSigla().equalsIgnoreCase(sigla)) { 
			    return moeda;
			}
		}
		return null;
	}
	
	public static List<Moeda> getAll() {
		return listaMoedas;
	}
}